"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactRedux = require("react-redux");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _breadcrumbs = _interopRequireDefault(require("../app/breadcrumbs"));

var _recordsTable = _interopRequireDefault(require("../app/records-table"));

var _paginate = _interopRequireDefault(require("../ui/paginate"));

var _filter = _interopRequireDefault(require("../app/filter"));

var _actionHeader = _interopRequireDefault(require("../app/action-header"));

var _wrapperBox = _interopRequireDefault(require("../ui/wrapper-box"));

var _notice = _interopRequireDefault(require("../app/notice"));

var _loader = _interopRequireDefault(require("../ui/loader"));

var _apiClient = _interopRequireDefault(require("../../utils/api-client"));

var _queryHasFilter = _interopRequireDefault(require("../../utils/query-has-filter"));

var _types = require("../../types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const Wrapper = _styledComponents.default.section.attrs({
  className: 'level'
}).withConfig({
  displayName: "resource__Wrapper",
  componentId: "sc-1eimg2g-0"
})(["align-items:stretch;flex-grow:1;flex-direction:column;"]);

const NoticeWrapper = _styledComponents.default.div.withConfig({
  displayName: "resource__NoticeWrapper",
  componentId: "sc-1eimg2g-1"
})(["width:100%;position:relative;"]);

class Resource extends _react.default.Component {
  constructor(props) {
    super(props);
    const {
      location
    } = props;
    this.toggleFilter = this.toggleFilter.bind(this);
    this.handleActionPerformed = this.handleActionPerformed.bind(this);
    this.resource = this.currentResource();
    this.state = {
      filterVisible: (0, _queryHasFilter.default)(location.search),
      records: [],
      page: 1,
      perPage: 20,
      total: 0,
      loading: true
    };
  }

  componentDidMount() {
    const {
      match
    } = this.props;

    this._fetchData(match.params.resourceId);
  }

  componentDidUpdate(prevProps) {
    const {
      match,
      location
    } = this.props;

    if (match.params.resourceId !== prevProps.match.params.resourceId || location.search !== prevProps.location.search) {
      this._fetchData(match.params.resourceId);
    }
  }

  currentResource(resourceId) {
    const {
      resources,
      match
    } = this.props;
    return resources.find(r => r.id === (resourceId || match.params.resourceId));
  }

  _fetchData(resourceId) {
    const {
      location
    } = this.props;
    const api = new _apiClient.default();
    this.setState({
      loading: true
    });
    this.resource = this.currentResource(resourceId);
    const query = new URLSearchParams(location.search);
    api.getRecords({
      resourceId: this.resource.id,
      query
    }).then(response => {
      this.setState({
        records: response.data.records,
        page: response.data.meta.page,
        perPage: response.data.meta.perPage,
        total: response.data.meta.total,
        loading: false
      });
    });
  }

  handleActionPerformed() {
    const {
      match
    } = this.props;

    this._fetchData(match.params.resourceId);
  }

  toggleFilter(event) {
    this.setState(state => ({
      filterVisible: !state.filterVisible
    }));
    event.preventDefault();
  }

  render() {
    const resource = this.currentResource();
    const {
      paths
    } = this.props;
    const {
      records,
      page,
      perPage,
      total,
      search,
      filterVisible,
      loading
    } = this.state;
    return _react.default.createElement(Wrapper, null, _react.default.createElement(NoticeWrapper, null, _react.default.createElement(_notice.default, null)), _react.default.createElement(_wrapperBox.default, null, _react.default.createElement(_breadcrumbs.default, {
      resource: resource
    }), _react.default.createElement(_actionHeader.default, {
      resource: resource,
      tag: total,
      toggleFilter: this.toggleFilter,
      actionPerformed: this.handleActionPerformed
    }), _react.default.createElement(_wrapperBox.default, {
      border: true
    }, loading ? _react.default.createElement(_loader.default, null) : _react.default.createElement(_recordsTable.default, {
      resource: this.resource,
      records: records,
      paths: paths,
      actionPerformed: this.handleActionPerformed
    }), _react.default.createElement(_paginate.default, {
      page: page,
      perPage: perPage,
      total: total
    }))), _react.default.createElement(_filter.default, {
      resource: this.resource,
      search: search,
      isVisible: filterVisible,
      toggleFilter: this.toggleFilter
    }));
  }

}

const mapStateToProps = state => ({
  paths: state.paths,
  resources: state.resources
});

Resource.propTypes = {
  resources: _propTypes.default.arrayOf(_types.resourceType).isRequired,
  location: _types.locationType.isRequired,
  match: _types.matchType.isRequired,
  paths: _types.pathsType.isRequired
};

var _default = (0, _reactRedux.connect)(mapStateToProps)(Resource);

exports.default = _default;